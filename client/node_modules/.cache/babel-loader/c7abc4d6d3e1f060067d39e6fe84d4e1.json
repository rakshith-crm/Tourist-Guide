{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithcrm/Desktop/Rakshith/Languages/PERN Stack/JWT/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setAuthentication] = useState(false);\n\n  const setAuth = boolean => {\n    setAuthentication(boolean);\n  };\n\n  useEffect(() => {\n    async () => {\n      try {\n        const query = await fetch('http://localhost:5000/auth/is-verify', {\n          method: 'GET',\n          headers: {\n            token: localStorage.token\n          }\n        });\n        const response = await query.json();\n        console.log(response);\n\n        if (response === true) {\n          setAuth(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 32\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(LoginPage, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 66\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 100\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 102\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 103\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dmnT+g73NpG20/AEEQGTT6MPqlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rakshithcrm/Desktop/Rakshith/Languages/PERN Stack/JWT/client/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","LoginPage","Register","Dashboard","useEffect","useState","App","isAuthenticated","setAuthentication","setAuth","boolean","query","fetch","method","headers","token","localStorage","response","json","console","log","error","message","props"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAA+D,kBAA/D;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,iBAAlB,IAAuCH,QAAQ,CAAC,KAAD,CAArD;;AAEA,QAAMI,OAAO,GAAGC,OAAO,IAAE;AACvBF,IAAAA,iBAAiB,CAACE,OAAD,CAAjB;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACZ,gBAAS;AACP,UAAI;AACF,cAAMO,KAAK,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAwC;AAC/DC,UAAAA,MAAM,EAAG,KADsD;AAE/DC,UAAAA,OAAO,EAAG;AAACC,YAAAA,KAAK,EAAGC,YAAY,CAACD;AAAtB;AAFqD,SAAxC,CAAzB;AAIA,cAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,YAAGA,QAAQ,KAAG,IAAd,EAAmB;AACjBR,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,OAVD,CAUE,OAAOY,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACD;AACF,KAdD;AAeD,GAhBQ,EAgBP,EAhBO,CAAT;AAiBA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,qCAAuB,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAGC,KAAK,IAAI,CAAChB,eAAD,gBAAkB,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAlB,gBAAoD,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAEc,KAAK,IAAI,CAAChB,eAAD,gBAAmB,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAnB,gBAAoD,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA7F;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,MAAM,EAAEc,KAAK,IAAIhB,eAAe,gBAAG,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAqC,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA9F;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlCQH,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport { useEffect, useState } from 'react';\nfunction App() {\n  const [isAuthenticated, setAuthentication] = useState(false);\n\n  const setAuth = boolean=>{\n    setAuthentication(boolean);\n  };\n\n  useEffect(()=>{\n    async()=>{\n      try {\n        const query = await fetch('http://localhost:5000/auth/is-verify',{\n          method : 'GET',\n          headers : {token : localStorage.token }\n        });\n        const response = await query.json();\n        console.log(response);\n        if(response===true){\n          setAuth(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n  },[]);\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact> <Redirect to='/login'></Redirect>  </Route>\n        <Route path='/login' render ={props => !isAuthenticated ?<LoginPage setAuth={setAuth} /> : <Redirect to='/dashboard'/>} ></Route>\n        <Route path='/register' render={props => !isAuthenticated ? <Register setAuth={setAuth} /> : <Redirect to='/login' /> }></Route>\n        <Route path='/dashboard' render={props => isAuthenticated ? <Dashboard setAuth={setAuth} /> : <Redirect to='/login' />}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}